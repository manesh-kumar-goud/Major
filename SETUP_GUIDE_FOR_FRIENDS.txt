================================================================================
 STOCK PREDICTION APPLICATION - COMPLETE SETUP GUIDE
================================================================================

 Project: Intelligent Stock Market Forecasting Using Deep Learning
 GitHub Repository: https://github.com/manesh-kumar-goud/Major.git
 Last Updated: December 2024

================================================================================
 PREREQUISITES (INSTALL THESE FIRST)
================================================================================

1. PYTHON 3.12 OR HIGHER
   - Download from: https://python.org/downloads/
   -  IMPORTANT: During installation, CHECK "Add Python to PATH"
   - Verify installation: Open command prompt and type "python --version"

2. NODE.JS 18 OR HIGHER
   - Download from: https://nodejs.org/
   - Choose the LTS (Long Term Support) version
   - Verify installation: Open command prompt and type "node --version"

3. GIT
   - Download from: https://git-scm.com/downloads
   - Use default settings during installation
   - Verify installation: Open command prompt and type "git --version"

================================================================================
 STEP 1: DOWNLOAD THE PROJECT
================================================================================

1. Open Command Prompt or PowerShell
2. Navigate to where you want to store the project (e.g., Desktop)
3. Run these commands:

   git clone https://github.com/manesh-kumar-goud/Major.git
   cd Major

================================================================================
 STEP 2: ENVIRONMENT CONFIGURATION
================================================================================

Create a file named ".env" in the main project folder with this content:

FLASK_ENV=development
FLASK_DEBUG=False
SECRET_KEY=dev-secret-key-change-in-production
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
RAPIDAPI_KEY=51930ec5damsh1a4a74844a2c3b3p10c74djsn64b7c88fd62e
RAPIDAPI_HOST=yahoo-finance15.p.rapidapi.com
RAPIDAPI_BASE_URL=https://yahoo-finance15.p.rapidapi.com/api/v1
API_REQUEST_TIMEOUT=30
API_MAX_RETRIES=3
API_RATE_LIMIT=100
MODEL_CACHE_TTL=3600
DATA_CACHE_TTL=1800
DATABASE_URL=sqlite:///app.db

 NOTE: This file contains API keys for real stock data. Keep it secure!

================================================================================
 STEP 3: INSTALL DEPENDENCIES
================================================================================

BACKEND DEPENDENCIES:
1. Open command prompt in the project folder
2. Run these commands:
   
   cd backend
   pip install -r requirements.txt
   cd ..

FRONTEND DEPENDENCIES:
1. In the same command prompt, run:
   
   cd frontend
   npm install
   cd ..

 This may take 5-10 minutes depending on your internet speed.

================================================================================
 STEP 4: RUN THE APPLICATION
================================================================================

OPTION A - AUTOMATED STARTUP (EASIEST):

For Windows:
   Double-click "start_app.bat" file

For Mac/Linux:
   Open terminal and run:
   chmod +x start_app.sh
   ./start_app.sh

OPTION B - MANUAL STARTUP (RECOMMENDED FOR TROUBLESHOOTING):

1. Start Backend Server:
   - Open Command Prompt #1
   - Navigate to project folder
   - Run: cd backend
   - Run: python app.py
   - Wait for "Running on http://127.0.0.1:5000"

2. Start Frontend Server:
   - Open Command Prompt #2
   - Navigate to project folder  
   - Run: cd frontend
   - Run: npm start
   - Wait for "compiled successfully"

================================================================================
 STEP 5: ACCESS THE APPLICATION
================================================================================

 Frontend (Main Interface): http://localhost:3000
 Backend API: http://localhost:5000

 The frontend will automatically open in your default web browser.

================================================================================
 HOW TO USE THE APPLICATION
================================================================================

1. STOCK PREDICTION:
   - Enter a stock ticker (e.g., AAPL, GOOGL, MSFT, TSLA)
   - Choose prediction model: LSTM or RNN
   - Select time period: 1d, 1mo, 3mo, 6mo, 1y, 2y, 5y
   - Set prediction days: 7-365 days
   - Click "Predict" button

2. MODEL COMPARISON:
   - Compare LSTM vs RNN performance
   - View accuracy metrics and charts

3. POPULAR STOCKS:
   - Browse trending stocks with real-time prices
   - Quick access to major stocks

4. FEATURES:
   - Real-time stock data via Yahoo Finance API
   - AI-powered predictions using TensorFlow
   - Interactive charts and visualizations
   - Model performance metrics

================================================================================
 TROUBLESHOOTING GUIDE
================================================================================

PYTHON PACKAGE INSTALLATION ERRORS:
   pip install --upgrade pip
   pip install -r backend/requirements.txt --force-reinstall

TENSORFLOW INSTALLATION ISSUES:
   pip install tensorflow==2.18.0 --force-reinstall

NODE.JS PACKAGE INSTALLATION ERRORS:
   cd frontend
   npm cache clean --force
   npm install --force

PORT ALREADY IN USE:
   - Frontend: Will automatically ask to use different port (say Yes)
   - Backend: Edit backend/app.py line 345, change port=5000 to port=5001

BACKEND NOT STARTING:
   1. Make sure Python is in PATH
   2. Check if .env file exists in main folder
   3. Try: python -m pip install --upgrade pip

FRONTEND NOT LOADING:
   1. Make sure Node.js is installed
   2. Clear browser cache
   3. Try different browser

API CONNECTION ISSUES:
   - App will automatically use mock data if real API fails
   - All features will still work with simulated data

TENSORFLOW LOADING SLOW:
   - Normal behavior on first run
   - Subsequent runs will be faster

================================================================================
 SYSTEM REQUIREMENTS
================================================================================

MINIMUM REQUIREMENTS:
- Operating System: Windows 10+, macOS 10.15+, or Linux Ubuntu 18.04+
- RAM: 4GB (8GB recommended)
- Storage: 2GB free space
- Internet: Required for real-time stock data
- Browser: Chrome, Firefox, Safari, or Edge (latest versions)

RECOMMENDED SPECS:
- RAM: 8GB or more
- SSD storage for faster loading
- Stable internet connection (5+ Mbps)

================================================================================
 TESTING THE INSTALLATION
================================================================================

1. QUICK HEALTH CHECK:
   Open browser and go to: http://localhost:5000/api/health
   Should show: {"status":"healthy","timestamp":"..."}

2. PREDICTION TEST:
   - Go to main app: http://localhost:3000
   - Enter "AAPL" as ticker
   - Select "LSTM" model
   - Choose "1mo" period
   - Set "7" prediction days
   - Click "Predict"
   - Should show charts and predictions

3. POPULAR STOCKS TEST:
   - Navigate to "Popular Stocks" section
   - Should show list of stocks with prices

================================================================================
 PROJECT STRUCTURE
================================================================================

Major/
 frontend/               # React web application
    src/               # Source code
    public/            # Static files
    package.json       # Dependencies
 backend/               # Flask API server
    app.py            # Main application
    models.py         # AI models (LSTM/RNN)
    api_client.py     # Yahoo Finance integration
    requirements.txt  # Python dependencies
 .env                  # Environment variables (CREATE THIS)
 start_app.bat         # Windows startup script
 start_app.sh          # Mac/Linux startup script
 README.md             # Project documentation

================================================================================
 SUPPORT AND HELP
================================================================================

IF YOU ENCOUNTER ISSUES:

1. Check this troubleshooting guide first
2. Ensure all prerequisites are properly installed
3. Verify .env file exists and contains correct content
4. Make sure both servers (backend and frontend) are running
5. Check Windows Defender/Antivirus isn't blocking the application

TECHNICAL DETAILS:
- Backend Framework: Flask (Python)
- Frontend Framework: React (JavaScript)
- AI/ML Framework: TensorFlow
- Data Source: Yahoo Finance via RapidAPI
- Database: SQLite (local file)

GITHUB REPOSITORY:
https://github.com/manesh-kumar-goud/Major.git

================================================================================
 EXPECTED RESULTS
================================================================================

When everything is working correctly, you should see:

 Backend server running on port 5000
 Frontend application running on port 3000
 Real-time stock data loading
 AI predictions generating successfully
 Interactive charts displaying
 Model comparison working
 No error messages in console

PERFORMANCE EXPECTATIONS:
- First prediction: 30-60 seconds (TensorFlow initialization)
- Subsequent predictions: 5-15 seconds
- Data loading: 2-5 seconds
- Chart rendering: 1-2 seconds

================================================================================
 FINAL NOTES
================================================================================

 SECURITY:
- The included API key is for demonstration purposes
- In production, use your own RapidAPI key
- Keep the .env file secure and don't share it publicly

 DATA ACCURACY:
- Predictions are for educational/demonstration purposes
- Not financial advice
- Real market data subject to API availability

 DEPLOYMENT:
- This setup is for local development
- For production deployment, see DEPLOYMENT.md

 PERFORMANCE:
- First run may be slower due to package downloads
- TensorFlow models compile on first use
- Subsequent runs will be significantly faster

================================================================================
END OF SETUP GUIDE
================================================================================

 For additional support, refer to the GitHub repository documentation.
 Happy predicting!

Last Updated: December 2024
